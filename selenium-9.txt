			Group Test Cases and Parallel Test Execution ..
DESCRIPTION
This section will guide you to:
● Work with groups attribute of @Test
● Perform cross browser execution (parallel execution)
Step 2.2.1: Creating a simple Java project
●	Open Eclipse
●	Go the File menu. Choose New->Java Project
●	Enter the project name as Parallel Tests. Click on Next
●	This will create the project files in the Project Explorer


Step 2.2.2: Downloading Selenium WebDriver jar, chromdriver.exe, and forefoxdriver.exe
●	Go to https://www.seleniumhq.org/download/ to download the Selenium WebDriver dependency
●	Under the section Selenium Client & WebDriver Language Bindings, click on Download for Java client version: 3.141.59
●	On the same page, under Third Party Drivers, Bindings, and Plugins, click on Latest for Mozilla Gecko Driver
●	Select the file suitable for your operating system
●	Go back to the previous page. Click on Latest for Google Chrome Driver
●	From the current releases, select the appropriate file per your Chrome version


Step 2.2.3: Adding the Web Driver dependency in the project
●	In the Project Explorer, right click on Parallel Tests
●	Select Properties. Select Java Build Path from the list. Go to Libraries.
●	Click on Add External JARs and browse the location where you have downloaded the JAR files
●	 Select JARs from the root folder and the libs folder
●	Click on Apply and Close
●	Copy the chromedriver.exe and geckodriver.exe, and paste it your project creating a resource folder


Step 2.2.4: Installing TestNG
●	TestNG is installed as an eclipse plugin in your practice lab. (Refer FSD: Lab Guide - Phase 5)



Step 2.2.5: Adding TestNG libraries to the Class Path
●	In the Project Explorer, right click on Parallel Tests
●	Select Properties. Select Java Build Path from the list. Go to Libraries
●	Click on Add Library. Select TestNG. Click on Next. Click on Finish
●	Click on Apply and Close

     
Step 2.2.6: Creating a Java class named ParallelTest.java
●	In the Project Explorer, expand Parallel Tests->Java Resources
●	Right click on src and choose New->Class
●	In Class Name, enter ParallelTests and click on Finish. In Package Name, enter com.parallel and click on Finish
●	Enter the following code:


package com.parallel;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.Test;
public class ParallelTests 
{
    WebDriver driver;
    @Test(groups="Chrome")
    public void LaunchChrome() 
	{
        System.setProperty("webdriver.chrome.driver", "./Resources/chromedriver.exe");
        driver = new ChromeDriver();
        driver.get("https://www.facebook.com");
        try 
		{
            Thread.sleep(2000);
        } catch (Exception e) 
		{
            e.printStackTrace();
        }
    }
    @Test(groups="Chrome", dependsOnMethods="LaunchChrome")
    public void TryFacebook1() 
	{
        System.out.println(Thread.currentThread().getId());
        driver.findElement(By.id("email")).sendKeys("ravi10thstudent@gmail.com");
        driver.findElement(By.id("pass")).sendKeys("12345");
        driver.findElement(By.id("loginbutton")).click();
    }
    @Test(groups="Firefox")
    public void LaunchFirefox() 
	{
        System.setProperty("webdriver.gecko.driver", "./Resources/geckodriver.exe");
        driver = new FirefoxDriver();
        driver.get("https://www.facebook.com");
        try 
		{
            Thread.sleep(4000);
        } catch (Exception e) 
		{
            e.printStackTrace();
        }
        
    }
    @Test(groups="Firefox", dependsOnMethods="LaunchFirefox")
    public void TryFacebook2() 
	{
        System.out.println(Thread.currentThread().getId());
        driver.findElement(By.id("email")).sendKeys("ravi10thstudent@gmail.com");
        driver.findElement(By.id("pass")).sendKeys("ravi28394");
        driver.findElement(By.id("loginbutton")).click();
        System.out.println(Thread.currentThread().getId());
    }
}

     
Step 2.2.7 Running the project
●	Right click on ParallelTests class. Click on TestNG->Convert to TestNG
●	Click on Finish. It will create a TestNG.xml file. Open that file
●	Right click. Select Run As ->TestNG Suite

another example:

package com.ecomerce.test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;

public class ParalellTest 
{
	public String baseUrl = "https://www.facebook.com/r.php?locale=en_GB&display=page";
	private WebDriver driver;	
	SoftAssert softassert = new SoftAssert();
	@Test(groups = {"Account Creation"})
	public void facebookAccCreation() 
	{
		System.out.println("Inside facebookAccCreation");
		System.out.println("Thread ID " +Thread.currentThread().getId());
		String baseUrl = "https://www.facebook.com/r.php?locale=en_GB&display=page";
		driver.get(baseUrl);
		String cssDay = "#day";
		WebElement cssDaySelect = driver.findElement(By.cssSelector(cssDay));
		softassert.assertNotNull(cssDaySelect);
		Select daySelect = new Select(cssDaySelect);
		daySelect.selectByVisibleText("11");
		WebElement cssGenderRadio = driver.findElement(By.cssSelector("span > span > input[type='radio'][value='2']"));
		cssGenderRadio.click();
		softassert.assertTrue(cssGenderRadio.isSelected());
		System.out.println("Gender is enabled = " + cssGenderRadio.isSelected());
		softassert.assertAll(" Day or/and Gender assertion failed");		
	}
	@Test(groups = "Account Creation", dependsOnGroups = { "Launch" }, 
	dataProvider = "googleUserData")
	public void googleAccCreation(String fName, String lName) 
	{
		System.out.println("Inside googleAccCreation");
		System.out.println("Thread ID " +Thread.currentThread().getId());
		String baseUrl = "https://accounts.google.com/signup/v2?biz=true&flowEntry=SignUp";
		driver.get(baseUrl);
	// Let's locate the first name text field by its id.
		WebElement firstNameTF = driver.findElement(By.id("firstName"));
		firstNameTF.sendKeys(fName) ;//("Myname");
	// Let's locate the surname name text field by its name.
		WebElement surNameTF = driver.findElement(By.name("lastName"));
		surNameTF.sendKeys(lName) ;//("latName");
	// The Next button using its class
		WebElement nextButton = driver.findElement(By.className("VfPpkd-vQzf8d"));
		System.out.println("Text on the button is " + nextButton.getText());		
		softassert.assertEquals("Next", nextButton.getText());
		softassert.assertAll(" Google Next button text did not match");
	}
	@Test(groups = "Launch")
	public void googleWebsiteTitle() 
	{
		System.out.println("Inside googleWebsiteTitle");
		System.out.println("Thread ID " +Thread.currentThread().getId());
		String baseUrl = "https://www.google.com";
		driver.get(baseUrl);
		System.out.println("Google Title is " + driver.getTitle());
		softassert.assertEquals("Google", driver.getTitle());
		softassert.assertAll(" Google title did not match");
	}
	@Test
	public void f1() 
	{
		System.out.println("Inside f1 in Thread ID " +Thread.currentThread().getId());
	}
	@Test
	public void f2() 
	{
		System.out.println("Inside f2 in Thread ID " +Thread.currentThread().getId());
	}
	@DataProvider(name = "googleUserData")
	public Object[][] createData1() 
	{
	 return new Object[][] {
		 {"fname1","lname1"},
		 {"fname2","lname2"}
	 };
	}
	@BeforeClass
	public void beforeClass() 
	{
		System.setProperty("webdriver.chrome.driver","C:\\Users\\HomeWk\\Downloads\\chromedriver_win32\\chromedriver.exe");
		driver = new ChromeDriver();
	}
	@AfterClass
	public void afterClass() 
	{
		driver.quit();
	}
}