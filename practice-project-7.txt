					Merge Sort
DESCRIPTION
This section will guide you to: 

● Create a Java class in your IDE
● Implement the merge sort algorithm in a predefined array
● Check if the element is available in the predefined array

package sorting;
import java.util.*;

public class MergeSort 
{

	public static void main(String[] args) 
	{
		
		int[] originalArray = {  9, 6, 3, 1, 2, 4, 5 };

		int[] sortedArray = mergeSort(originalArray);

		System.out.println("Original Array: " + Arrays.toString(originalArray));
		
		System.out.println("Sorted Array: " + Arrays.toString(sortedArray));

	}

	public static int[] merge(int[] array1, int[] array2) 
	{
		int[] combined = new int[array1.length + array2.length];
		int index = 0;
		int i = 0;
		int j = 0;

		while (i < array1.length && j < array2.length) 
		{
			if (array1[i] < array2[j])
				combined[index++] = array1[i++];
			else
				combined[index++] = array2[j++];
		}
		
		while (i < array1.length) 
			combined[index++] = array1[i++];
		
		while (j < array2.length) 
			combined[index++] = array2[j++];
		
		return combined;
	}
	public static int[] mergeSort(int[] array) 
	{
		if (array.length == 1)
			return array;

		int midIndex = array.length / 2;
		int[] left = mergeSort(Arrays.copyOfRange(array, 0, midIndex));
		int[] right = mergeSort(Arrays.copyOfRange(array, midIndex, array.length));

		return merge(left, right);
	}

}

OUTPUT:

Original Array: [9, 6, 3, 1, 2, 4, 5]
Sorted Array: [1, 2, 3, 4, 5, 6, 9]



