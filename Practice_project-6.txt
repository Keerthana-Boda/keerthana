							Circular Linked List
DESCRIPTION

This section will guide you to: 

● Write a program in Java to insert a new element in a sorted circular linked list
● Use Eclipse (the popular text editor for Java programs) 
● Push code to Git

package lists;

class Node
{
	int data;
	Node next;
	Node(int d) 
	{
		data = d;
		next = null;
	}
}
public class CircularList 
{	
	Node head;
	CircularList() 
	{
		head = null;
	}
	void sortedInsert(Node new_node)
	{
		Node current = head;
		if(current == null)
		{
			new_node.next = new_node;
			head = new_node;
		}
		else if(current.data >= new_node.data)
		{
			while(current.next != head)
			{
				current = current.next;
			}
			current.next = new_node;
			new_node.next = head;
			head = new_node;
		}
		else 
		{
			while(current.next != head && current.next.data < new_node.data)
			{
				current = current.next;
			}
			new_node.next = current.next;
			current.next = new_node;
		}
	}
	void printList()
	{
		if(head != null)
		{
			Node temp = head;
			do
			{
				System.out.println(temp.data + " ");
				temp = temp.next;
			}
			while(temp != head);
		}
	}
	

	public static void main(String[] args) 
	{
		// TODO Auto-generated method stub
		CircularList list = new CircularList();
		int a[] = new int[] {12,23,34,45,4,6};
		Node temp = null;
		for(int i = 0;i < 6;i++)
		{
			temp = new Node(a[i]);
			list.sortedInsert(temp);
		}
		list.printList();
	}
}


OUTPUT:

4 
6 
12 
23 
34 
45 


